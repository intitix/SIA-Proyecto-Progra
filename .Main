import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.InputMismatchException;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws ParseException {
        
        // Crear mapa de atracciones y agregar atracciones precargadas
        HashMap<String, Atraccion> atracciones = new HashMap<>();
        atracciones.put("Montaña rusa", new Atraccion("Montaña rusa", 30, 10));
        atracciones.put("Carrusel", new Atraccion("Carrusel", 20, 15));

        // Inicializar parque
        Parque parqueCentral = new Parque("PUCV LANDIA", atracciones, 8, 18);
             
        // Crear un formato de fecha
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm");

        // Crear reservas
        Reserva reserva1 = new Reserva(10, atracciones.get("Montaña rusa"), sdf.parse("10/09/2024 14:00"));
        Reserva reserva2 = new Reserva(15, atracciones.get("Montaña rusa"), sdf.parse("10/09/2024 15:00"));

        // Agregar reservas a la atracción "Montaña rusa"
        atracciones.get("Montaña rusa").agregarReserva(reserva1);
        atracciones.get("Montaña rusa").agregarReserva(reserva2);

        // Lector
        Scanner lector = new Scanner(System.in);
        
        int opcion;
        
        while (true) {
            // Limpiar pantalla
            System.out.print("\033[H\033[2J");
            System.out.flush();
            parqueCentral.mostrarInfo(false);
            System.out.println("MENU");
            System.out.println("1. Gestión de Atracciones");
            System.out.println("2. Gestión de Reservas");
            System.out.println("3. Gestión de Parque y Estadísticas");
            System.out.println("4. Salir");
            System.out.print("Escoja una opción: ");
            
            try {
                opcion = lector.nextInt();
                lector.nextLine(); // Limpiar el buffer

                switch (opcion) {
                    case 1 -> {
                        // Instanciar Gestor y usar método
                        GestorAtracciones gestor = new GestorAtracciones(parqueCentral, lector);
                        gestor.gestionar();
                    }
                    case 2 -> {
                        GestorReservas gestor = new GestorReservas(parqueCentral, lector);
                        gestor.gestionar();
                    }
                    case 3 -> {
                        GestorParque gestorParque = new GestorParque(parqueCentral, lector);
                        gestorParque.gestionarParque();
                    }
                    case 4 -> {
                        System.out.print("¿Está seguro que desea salir? (s/n): ");
                        String confirmacion = lector.nextLine();
                        if (confirmacion.equalsIgnoreCase("s")) {
                            System.out.println("Saliendo...");
                            lector.close();
                            return; // Salir del programa
                        }
                    }
                    default -> System.out.println("Opción inválida. Intente de nuevo.");
                }
            } catch (InputMismatchException e) {
                System.out.println("Error: Entrada inválida. Por favor, ingrese un número.");
                lector.nextLine(); // Limpiar el buffer de entrada
            }
        }
    }
}
