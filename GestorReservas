import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;

public class GestorReservas {
    private final Parque parque;
    private final Scanner lector;

    public GestorReservas(Parque parque, Scanner lector) {
        this.parque = parque;
        this.lector = lector;
    }

    public void gestionar() throws ParseException {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm");
        while (true) {
            System.out.print("\033[H\033[2J");
            System.out.flush();
            System.out.println("GESTIÓN DE RESERVAS");
            System.out.println("1. Crear Reserva");
            System.out.println("2. Mostrar Reservas");
            System.out.println("3. Eliminar Reserva");
            System.out.println("4. Volver al menú principal");
            System.out.print("Escoja una opción: ");
            int opcion = lector.nextInt();
            lector.nextLine(); // Limpiar el buffer

            switch (opcion) {
                case 1 -> crearReserva(sdf);
                case 2 -> mostrarReservas();
                case 3 -> eliminarReserva();
                case 4 -> {
                    return;
                }
                default -> System.out.println("Opción inválida. Intente de nuevo.");
            }
        }
    }

    private void crearReserva(SimpleDateFormat sdf) throws ParseException {
        System.out.println("CREAR RESERVA");
        System.out.print("Ingrese el nombre de la atracción: ");
        String nombreAtraccion = lector.nextLine();

        Atraccion atraccion = parque.buscarAtraccion(nombreAtraccion);

        if (atraccion != null) {
            System.out.print("Ingrese el grupo de personas: ");
            int grupoPersonas = lector.nextInt();
            lector.nextLine(); // Limpiar el buffer

            // Validar que el tamaño del grupo no supere la capacidad de la atracción
            if (grupoPersonas > atraccion.getCapacidad()) {
                System.out.println("Error: El grupo de personas supera la capacidad de la atracción.");
                return;
            }

            System.out.print("Ingrese la fecha y hora de la reserva (dd/MM/yyyy HH:mm): ");
            String fechaHoraStr = lector.nextLine();
            Date fechaHora = sdf.parse(fechaHoraStr);

            Reserva reserva = new Reserva(grupoPersonas, atraccion, fechaHora);
            parque.agregarReservaAAtraccion(nombreAtraccion, reserva);
            System.out.println("Reserva creada exitosamente.");
        } else {
            System.out.println("Atracción no encontrada.");
        }
    }

    private void mostrarReservas() {
        System.out.print("Ingrese el nombre de la atracción para mostrar reservas: ");
        String nombreAtraccion = lector.nextLine();
        parque.mostrarReservasDeAtraccion(nombreAtraccion);
    }

    private void eliminarReserva() {
        System.out.print("Ingrese el nombre de la atracción de la reserva a eliminar: ");
        String nombreAtraccion = lector.nextLine();

        Atraccion atraccion = parque.buscarAtraccion(nombreAtraccion);

        if (atraccion != null) {
            System.out.print("Ingrese el grupo de personas de la reserva a eliminar: ");
            int grupoPersonas = lector.nextInt();
            lector.nextLine(); // Limpiar el buffer
            System.out.print("Ingrese la fecha y hora de la reserva a eliminar (dd/MM/yyyy HH:mm): ");
            String fechaHoraStr = lector.nextLine();
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm");
            try {
                Date fechaHora = sdf.parse(fechaHoraStr);
                Reserva reservaAEliminar = new Reserva(grupoPersonas, atraccion, fechaHora);
                parque.eliminarReservaDeAtraccion(nombreAtraccion, reservaAEliminar);
                System.out.println("Reserva eliminada exitosamente.");
            } catch (ParseException e) {
                System.out.println("Error en el formato de la fecha y hora.");
            }
        } else {
            System.out.println("Atracción no encontrada.");
        }
    }
}
