import java.util.Scanner;

public class GestorAtracciones {
    private final Parque parque; // El parque contiene la información de las atracciones
    private final Scanner lector;

    public GestorAtracciones(Parque parque, Scanner lector) {
        this.parque = parque;
        this.lector = lector;
    }

    public void gestionar() {
        int opcion;
        OUTER:
        while (true) {
            try {
                System.out.print("\033[H\033[2J");
                System.out.flush();
                System.out.println("GESTOR DE ATRACCIONES");
                System.out.println("");
                System.out.println("1. Crear Atracción");
                System.out.println("2. Lista Atracciones");
                System.out.println("3. Modificar Atracción");
                System.out.println("4. Buscar Atracciones por rango de capacidad");
                System.out.println("5. Eliminar Atracción");
                System.out.println("6. Volver al menú principal");
                System.out.print("Escoja una opción: ");
                opcion = lector.nextInt();
                lector.nextLine(); // Limpiar buffer de entrada
                switch (opcion) {
                    case 1 -> crearAtraccion();
                    case 2 -> mostrarAtracciones();
                    case 3 -> modificarAtraccion();
                    case 4 -> mostrarAtraccionesPorRango();
                    case 5 -> eliminarAtraccion();
                    case 6 -> {
                        System.out.println("Volviendo al menú principal...");
                        break OUTER; // Vuelve al menú principal
                    }
                    default -> System.out.println("Opción no válida. Intente nuevamente.");
                }
            } catch (Exception e) {
                System.out.println("Error, asegúrese de colocar los datos correctamente");
                lector.nextLine(); // Limpiar el buffer en caso de error
            }
        }
    }

    private void crearAtraccion() {
        System.out.print("\033[H\033[2J");
        System.out.flush();
        System.out.println("CREANDO ATRACCIÓN");
        System.out.println("");

        System.out.print("Ingrese el nombre de la nueva atracción: ");
        String nombreAtraccion = lector.nextLine();

        System.out.print("Ingrese la capacidad de la nueva atracción: ");
        int capacidad = lector.nextInt();

        System.out.print("Ingrese la duración de la nueva atracción (en minutos): ");
        int duracion = lector.nextInt();
        lector.nextLine(); // Limpiar el buffer

        Atraccion nuevaAtraccion = new Atraccion(nombreAtraccion, capacidad, duracion);
        parque.agregarAtraccion(nombreAtraccion, nuevaAtraccion); // Usar el parque para almacenar la atracción

        System.out.println("Atracción creada exitosamente.");
        System.out.println("Presione Enter para continuar...");
        lector.nextLine();
    }

    private void mostrarAtracciones() {
        System.out.print("\033[H\033[2J");
        System.out.flush();
        System.out.println("Lista de atracciones:");

        for (Atraccion atraccion : parque.getMapaAtracciones().values()) {
            atraccion.mostrarAtraccion();  // Mostrar detalles
        }

        System.out.println("");
        System.out.println("Presione Enter para continuar...");
        lector.nextLine();
    }

    private void modificarAtraccion() {
        System.out.print("\033[H\033[2J");
        System.out.flush();
        System.out.println("BUSCAR Y MODIFICAR ATRACCIÓN");
        System.out.print("Ingrese el nombre de la atracción que desea buscar: ");
        String nombreBusqueda = lector.nextLine();

        Atraccion atraccion = parque.buscarAtraccion(nombreBusqueda);
        if (atraccion != null) {
            System.out.println("Atracción encontrada:");
            atraccion.mostrarAtraccion(true);

            System.out.println("¿Desea modificar esta atracción? (s/n)");
            String respuesta = lector.nextLine();
            if (respuesta.equalsIgnoreCase("s")) {
                System.out.print("Ingrese el nuevo nombre de la atracción (deje en blanco para mantener el actual): ");
                String nuevoNombre = lector.nextLine();
                if (!nuevoNombre.isEmpty()) {
                    parque.eliminarAtraccion(nombreBusqueda);
                    atraccion.setNombre(nuevoNombre);
                    parque.agregarAtraccion(nuevoNombre, atraccion); // Reinsertar la atracción modificada
                }

                System.out.print("Ingrese la nueva capacidad de la atracción (deje en blanco para mantener la actual): ");
                String nuevaCapacidad = lector.nextLine();
                if (!nuevaCapacidad.isEmpty()) {
                    atraccion.setCapacidad(Integer.parseInt(nuevaCapacidad));
                }

                System.out.print("Ingrese la nueva duración de la atracción (deje en blanco para mantener la actual): ");
                String nuevaDuracion = lector.nextLine();
                if (!nuevaDuracion.isEmpty()) {
                    atraccion.setDuracion(Integer.parseInt(nuevaDuracion));
                }

                System.out.println("Atracción modificada exitosamente.");
            }
        } else {
            System.out.println("Atracción no encontrada.");
        }

        System.out.println("Presione Enter para continuar...");
        lector.nextLine();
    }

    private void mostrarAtraccionesPorRango() {
        System.out.print("\033[H\033[2J");
        System.out.flush();
        System.out.println("MOSTRAR ATRACCIONES POR RANGO DE CAPACIDAD");
        System.out.print("Ingrese la capacidad mínima: ");
        int capacidadMin = lector.nextInt();
        System.out.print("Ingrese la capacidad máxima: ");
        int capacidadMax = lector.nextInt();
        lector.nextLine(); // Limpiar el buffer

        System.out.println("\nAtracciones en el rango de capacidad:");
        for (Atraccion atraccion : parque.getMapaAtracciones().values()) {
            if (atraccion.getCapacidad() >= capacidadMin && atraccion.getCapacidad() <= capacidadMax) {
                atraccion.mostrarAtraccion();
            }
        }

        System.out.println("Presione Enter para continuar...");
        lector.nextLine();
    }

    private void eliminarAtraccion() {
        System.out.print("\033[H\033[2J");
        System.out.flush();
        System.out.println("ELIMINAR ATRACCIÓN");
        System.out.println("");

        int i = 1;
        for (String nombre : parque.getMapaAtracciones().keySet()) {
            System.out.println(i + ". " + nombre);
            i++;
        }
        System.out.print("Ingrese el nombre de la atracción a eliminar: ");
        String nombreEliminar = lector.nextLine();
        if (parque.eliminarAtraccion(nombreEliminar)) {
            System.out.println("Atracción eliminada exitosamente.");
        } else {
            System.out.println("Atracción no encontrada.");
        }

        System.out.println("Presione Enter para continuar...");
        lector.nextLine();
    }
}
